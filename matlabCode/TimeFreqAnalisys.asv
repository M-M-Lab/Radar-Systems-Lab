clearvars 
close all
clc

%% Setting dei parametri
zp = 4;

windowSize = 128;

blindCells=64;

f0=122e9;

omega=2*pi/75;  %Velocit√† angolare del tavolo rotante

c=3e8;

%% Inizializzazione

load('rotante120.mat')

radarData=data.data(3:end,:).';

nPlots = size(radarData,2)-windowSize;

PRF=1/max(diff(data.tStamp));

lambda=c/f0;

Hn = hamming(data.Samps);

windowedData=radarData.*Hn;

%% Filtri

%filteredData = filter([1 -1],1,windowedData,[],1);
%filteredData=highpass(windowedData,0.35,'Steepness',0.9);
%filteredData=bandpass(windowedData,[0.5,0.95]);
%filteredData=highpass(windowedData.',0.05,'Steepness',0.9).';
filteredData=windowedData;

%% Costruzione dello spettrogramma

SPgram=zeros(zp*windowSize,nPlots);

rangeProfiles=fft(filteredData,zp*data.Samps);

for index = 1:nPlots

    winRangeProfiles = rangeProfiles(:,index:index+windowSize-1);

    RDmap=fft(winRangeProfiles,zp*windowSize,2);

    RDmap = fftshift(RDmap,2);

    RDmap=RDmap(blindCells:end/2,:);

    strip=max(abs(RDmap),[],1);

    SPgram(:,index)=strip./max(strip,[],'all');

end

% maxRange = ((data.Samps + 37.5)*3e8)/(4*data.Bandwidth*1e6);
% maxVel = lambda/(4*PRI);
% 
% rangeVec = 0:maxRange/(zp*data.Samps/2):maxRange - maxRange/(zp*data.Samps);
% velVec = -maxVel:2*maxVel/(zp*windowSize):maxVel - maxVel/(zp*windowSize);
% [V,R] = meshgrid(velVec,rangeVec);


fd=linspace(-PRF/2,PRF/2,size(RDmap,2));
tVect=linspace(0,size(SPgram,2)/PRF,size(SPgram,2));

figure(1)
imagesc(tVect,fd,log10(abs(SPgram)))
colorbar
xlabel('Time [s]')
clim([-0.5 0])




angoli=linspace(0,360,size(SPgram,2));
iRad=abs(iradon(SPgram,angoli,size(RDmap,2)));

xVect=fd*lambda/(2*omega);

yVect=fd*lambda/(2*omega);
figure(3)
imagesc(xVect,yVect,iRad)
colorbar


